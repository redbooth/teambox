- threaded = false unless local_assigns[:threaded]
- simpleconv = false unless local_assigns[:simpleconv]

- cache_comment(comment, threaded, simpleconv) do
  %div[comment]{ comment_data(comment) }
    .info
      - if threaded
        = micro_avatar(comment.user)
      - else
        = thumb_avatar(comment.user)
    .block
      - unless rss?
        .actions_menu
          %span.actiondate= posted_date comment.created_at
          = image_tag('triangle.png', :class => 'triangle')
          .extra
            - case comment.target
            - when Conversation
              = link_to t('comments.actions.conversation_url'), project_conversation_path(comment.project, comment.target)
            - # There are legacy comments targeting projects and task lists, so we need an if here:
            - if comment.target.is_a?(Conversation) or comment.target.is_a?(Task)
              = link_to t('comments.actions.edit'), [:edit, comment.project, comment.target, comment],
                  :rel => 'facebox', :'data-uneditable-message' => t('.cannot_edit'), :class => :edit
              = link_to t('common.delete'), [comment.project, comment.target, comment], :'data-method' => 'delete',
                  :'data-confirm' => t('.confirm_delete'), :'data-remote' => true, :class => :delete
      .body.textilized
        .before
          = link_to(h(comment.user.name), comment.user, :class => :user) + " "
          - if comment.task_comment?
            = comment_task_status(comment)
            = comment_task_due_on(comment)
          - if comment.hours?
            = content_tag(:span, human_hours(comment.hours), :class => :hours)
          - if simpleconv
            %span.in_project
              = t('.commented_in_project', :user => '', :project => '')
              = link_to(comment.project, comment.project, :class => :project) + ": "

        - if comment.task_comment? and comment.assigned_transition?
          %p.assigned_transition
            - if comment.assigned_id?
              = t('tasks.assigned.assigned_to', :user => comment.assigned.user.name)
            - else
              = t('tasks.assigned.unassigned')
        
        ~raw comment.body_html

      - if comment.uploads.any?
        - if comment.uploads.all? { |upload| upload.image? }
          .upload_images
            = list_uploads_inline_with_thumbnails(comment.uploads)
        - else
          .upload_list
            = list_uploads_inline(comment.uploads)
      
      - if comment.google_docs.any?
        %ul.google_docs_list
          = render :partial => 'google_docs/file', :collection => comment.google_docs, :as => :google_doc
          
    .clear