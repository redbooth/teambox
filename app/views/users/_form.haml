- f = form
- user = form.object
- sub_action = @sub_action

- if user.new_record? or sub_action != nil
  - if user.new_record? or sub_action == 'profile'
    .first_name.text_field
      = f.label :first_name, t('.first_name')
      = f.text_field :first_name, :autofocus => 'autofocus'
      = errors_for user, :first_name
      - tooltip t('.tooltips.first_name')
    .last_name.text_field
      = f.label :last_name, t('.last_name')
      = f.text_field :last_name
      = errors_for user, :last_name
      - tooltip t('.tooltips.last_name')
  - if user.new_record? or sub_action == 'settings'
    .login.text_field
      = f.label :login, t('.login')
      = f.text_field :login
      = errors_for user, :login
      - tooltip t('.tooltips.login')
  - if user.new_record? or sub_action == 'settings'
    .email.text_field
      = f.label :email, t('.email')
      - if @invitation || @app_link
        = f.text_field :email, :readonly => 'readonly', :style => 'color: #999'
      - else
        = f.text_field :email
        - tooltip t('.tooltips.email')
      = errors_for user, :email

    - if @invitation
      .use_this_email{ :style => 'margin: 10px; padding: 10px; border: 1px rgb(220,220,150) solid; background-color: rgb(255,255,200)' }
        = t('.use_this_email')

    - if @invitation_token
      = hidden_field_tag 'invitation', @invitation_token
      
- if user.new_record? || sub_action == 'settings'
  #password_fields{ :style => user.new_record?? '' : 'display: none' }
    .password.text_field
      = f.label :password, t('.password')
      = f.password_field :password, :autocomplete => 'off'
      = errors_for user, :password
      - unless sub_action == 'settings'
        = password_strength :password_strength, 'user_password'
        - tooltip t('.tooltips.password')
    .password.text_field
      = f.label :password_confirmation, t('.confirm_password')
      = f.password_field :password_confirmation, :autocomplete => 'off'
      = errors_for user, :password_confirmation

- if user.new_record?
  - build_user_phone_number(user)
  - f.fields_for :card do |card|
    - card.fields_for :phone_numbers do |phone|
      .phone_number.text_field
        = phone.label :name, t('.phone')
        = phone.text_field :name
        .field_note= t('.phone_for_integration')
        - tooltip t('.tooltips.phone')
- else
  - if sub_action == 'settings'
    #change_password_link
      = link_to_function t('.change_password'), show_user_password_fields
    .first_day_of_week.select
      = f.label :first_day_of_week, t('.first_day_of_week')
      = f.select :first_day_of_week, [[t('.sunday'), 'sunday'],[t('.monday'), 'monday']]
    
- if user.new_record? || sub_action == 'settings'
  .language.select
    = f.label :language, t('.language')
    = f.select :language, User::LANGUAGES
    
  .time_zone.select
    = f.label :time_zone, t('.time_zone')
    = f.time_zone_select :time_zone, ActiveSupport::TimeZone.us_zones, :default => "Eastern Time (US & Canada)"    
    - unless user.time_zone_changed?
      :javascript
        var offset = -new Date().getTimezoneOffset() / 60 - 1
        var local_tz = (offset < 0 ? "-" : "+") + offset.abs().toPaddedString(2)
        var select = $('user_time_zone')
        $A(select.options).find(function(option) {
          return option.text.match(/[+-]\d+/) == local_tz
        }).selected = true

- if sub_action == 'profile'
  .description.text_area
    = f.label :biography, t('.biography')
    = f.text_area :biography

  = list_card_fields(f,%w(phone_numbers email_addresses websites addresses ims social_networks))

- if @sub_action == 'picture'
  %p= t(user.avatar?? '.avatar.we_have_this_avatar' : '.avatar.gravatar_in_use', :gravatar => gravatar_url)
  %p
    = image_tag avatar_or_gravatar(user, :profile)
    = image_tag avatar_or_gravatar(user, :thumb)
    = image_tag avatar_or_gravatar(user, :micro)
  %p= t('.avatar.upload_here_or_at_gravatar', :gravatar => gravatar_url)
  %p
    = f.label :avatar, t('.avatar.field')
    = f.file_field :avatar
  - if user.avatar?
    %p
      = f.label :avatar_destroy, t('.avatar.destroy')
      = f.check_box :avatar_destroy

- if @sub_action == 'notifications'
  .check_boxes.notifications
    .check_box.notify
      = f.check_box :notify_mentions
      = f.label :notify_mentions, t('.notify_mentions', :login => user.login)
    .check_box.notify
      = f.check_box :notify_conversations
      = f.label :notify_conversations, t('.notify_conversations')
    .check_box.notify  
      = f.check_box :notify_task_lists
      = f.label :notify_task_lists, t('.notify_task_lists')
    .check_box.notify
      = f.check_box :notify_tasks
      = f.label :notify_tasks, t('.notify_tasks')
    .check_box.notify
      = f.check_box :wants_task_reminder
      = f.label :wants_task_reminder, t('.wants_task_reminder')

- if @sub_action == 'delete'
  - if current_user.projects.count > 0
    %p= t('.account_deletion.steps_before_1')
    %p= t('.account_deletion.steps_before_2')
    %p= t('.account_deletion.steps_before_3')
  - else
    %p= t('.account_deletion.what_will_happen')
    %p= link_to t('.account_deletion.delete_my_account'), destroy_user_path

- if @sub_action == 'linked_accounts'
  = render :partial => 'users/settings/linked_accounts'

= hidden_field_tag 'sub_action', sub_action
