<%=
    weekday_list = t('calendar.abbr_weekdays')
    
    if ( current_user && current_user.first_day_of_week == 'monday' )
      weekday_list << weekday_list.shift
      "Date.weekdays = $w('#{weekday_list.join(' ')}'); Date.first_day_of_week = 1;"
    else
      "Date.weekdays = $w('#{weekday_list.join(' ')}'); Date.first_day_of_week = 0;"
    end
%>

Date.months = $w('<%= I18n.t('date.month_names').join(" ").strip %>');

_translations = {
  "OK": "<%= t('calendar.ok') %>",
  "Now": "<%= t('calendar.now') %>",
  "Today": "<%= t('calendar.today') %>",
  "Clear": "<%= t('calendar.clear') %>"
};

<% 
  less_than_one = I18n.t('datetime.distance_in_words.less_than_x_minutes.one')
  less_than_one_ago = I18n.t('datetime.time_ago', :time_ago_in_words => less_than_one)
  one_minute = I18n.t('datetime.distance_in_words.x_minutes.one')
  one_minute_ago = I18n.t('datetime.time_ago', :time_ago_in_words => one_minute)
  minutes = I18n.t('datetime.distance_in_words.x_minutes', :count => '" + minutes + "')
  minutes_ago = I18n.t('datetime.time_ago', :time_ago_in_words => minutes)
%>

function minutesAgoInWords(minutes) {
  if(minutes == 0) { return '<%= less_than_one %>'; }
  if(minutes == 1) { return '<%= one_minute_ago %>'; }
  return "<%= minutes_ago %>";
}

/* strftime strings */
time_format_short = '<%= I18n.t('time.formats.short') %>';
time_pm = '<%= I18n.t('time.pm') %>';
time_am = '<%= I18n.t('time.am') %>';

date_format_short = '<%= I18n.t('date.formats.short')%>';
date_format_short = '<%= I18n.t('date.formats.long')%>';
date_abbr_day_names = $w("<%= I18n.t('date.abbr_day_names').join(" ") %>");
date_day_names = $w("<%= I18n.t('date.day_names').join(" ") %>");
date_abbr_month_names = $w("<%= I18n.t('date.abbr_month_names').join(" ") %>");
date_month_names = $w("<%= I18n.t('date.month_names').join(" ") %>");
date_yesterday = '<%= I18n.t 'date.yesterday' %> ';

/* when ready, start excuter */
document.observe("dom:loaded", function() {
  format_posted_date();
  new PeriodicalExecuter(format_posted_date, 30);
});
